"use strict";export class BaseNotice extends HTMLElement{static observedAttributes=[];constructor(){super()}setMessage(message,level,icon){this.message=message;this.level=level;this.icon=icon}connectedCallback(){const $this=$(this);$this.text("");$this.addClass("notice");$this.addClass("notice-"+this.level);$this.append($(`<span class="notice-icon">${this.icon}</span>`));$this.append($(`<span class="notice-message">${this.message}</span>`))}}export class InfoNotice extends BaseNotice{constructor(){super()}connectedCallback(){const info=$(this).text();this.setMessage(info,"info","&#60020;");super.connectedCallback()}}export class WarningNotice extends BaseNotice{constructor(){super()}connectedCallback(){const info=$(this).text();this.setMessage(info,"warning","&#60012;");super.connectedCallback()}}export class ErrorNotice extends BaseNotice{constructor(){super()}connectedCallback(){const info=$(this).text();this.setMessage(info,"error","&#60039;");super.connectedCallback()}}customElements.define("info-notice",InfoNotice);customElements.define("warning-notice",WarningNotice);customElements.define("error-notice",ErrorNotice);
