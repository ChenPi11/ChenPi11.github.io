"use strict";import{IOBuffer}from"./io.js";import{playBell}from"./bell.js";import{getPreferredTermTheme,registerTerminal,getPreferredTermFontFamily,getPreferredTermFontSize}from"./term-themes.js";function getOutputableData(output){let output_=output.replaceAll("\n","\r\n");output_=output_.replaceAll("","\b \b");if(output_.includes("")){playBell()}return output_}function standardizedOutput(output){let output_=output.replaceAll("\r","\n");if(output_.includes("")){playBell()}return output_}export class TerminalApplet extends HTMLElement{static observedAttributes=["title","columns","rows","src","readonly"];constructor(){super();this.stdin=new IOBuffer}onData(data){if(data==="[3~"){return}let str=standardizedOutput(data);this.terminal.write(getOutputableData(str).replaceAll("","Û±ä∑"));this.stdin.write(str)}attributeChangedCallback(name,_oldValue,newValue){if(name==="title"&&newValue&&this.titleElement){this.title=newValue;this.titleElement.text(this.title)}if(name==="columns"&&newValue&&this.terminal){this.columns=parseInt(newValue);this.terminal.resize(this.columns,this.rows)}if(name==="rows"&&newValue&&this.terminal){this.rows=parseInt(newValue);this.terminal.resize(this.columns,this.rows)}}connectedCallback(){const $this=$(this);this.title=$this.attr("title")||"Êú™ÂëΩÂêçÁªàÁ´Ø";this.src=$this.attr("src");this.readonly=$this.attr("readonly")||true;if(!this.src){throw new Error("Terminal applet's src is not defined.")}$this.addClass("terminal-applet");this.header=$(`<div class="terminal-applet-header"></div>`);$this.append(this.header);this.button=$(`<button class="terminal-applet-toggle-button" type="button">-</button>`);this.header.append(this.button);this.titleElement=$(`<div class="terminal-applet-title"></div>`);this.titleElement.text(this.title);this.header.append(this.titleElement);this.terminalElement=$(`<div class="terminal-applet-terminal"></div>`);$this.append(this.terminalElement);this.columns=this.getAttribute("columns")||"80";this.rows=this.getAttribute("rows")||"25";this.columns=parseInt(this.columns);this.rows=parseInt(this.rows);this.terminal=new Terminal({theme:getPreferredTermTheme(),fontFamily:getPreferredTermFontFamily(),scrollback:9999999});registerTerminal(this.terminal);this.loadAddons();this.terminal.open(this.terminalElement.get(0));this.terminal.resize(this.columns,this.rows);if(!this.readonly){this.terminal.onData(this.onData.bind(this))}this.collapsed=false;const self=this;$((function(){self.terminal.options.fontSize=getPreferredTermFontSize()}));function toggleContent(){const terminalElement=self.terminalElement;const button=self.button;if(self.collapsed){terminalElement.css("maxHeight",`${terminalElement.prop("scrollHeight")}px`);button.text("-");self.collapsed=false}else{terminalElement.css("maxHeight","0px");button.text("+");self.collapsed=true}}this.header.on("click",toggleContent);$((function(){const terminalElement=self.terminalElement;terminalElement.css("maxHeight",`${terminalElement.prop("scrollHeight")}px`)}));this.executeApplet();this.postLoadAddons()}loadAddons(){this.fitAddon=new FitAddon.FitAddon;this.terminal.loadAddon(this.fitAddon)}postLoadAddons(){function fit(){this.fitAddon.fit()}fit=fit.bind(this);$(window).on("resize",fit)}executeApplet(){const $this=$(this);this.applet_element=$(`<script src="${this.src}" type="module"><\/script>`);$this.append(this.applet_element)}}customElements.define("terminal-applet",TerminalApplet);export class TerminalHandles{constructor(element,terminal,stdin){this.element=element;this.terminal=terminal;this.stdin=stdin}}export function getTerminal(id){const terminalDOMElement=$(`#${id}`).get(0);return new TerminalHandles(terminalDOMElement,terminalDOMElement.terminal,terminalDOMElement.stdin)}export function fwrite(term,str){term.write(getOutputableData(str))}export function fwriteln(term,str){term.writeln(str)}export function fprintf(term,format,...args){const output=vsprintf(format,args);fwrite(term,output)}export function fprintfln(term,format,...args){const output=vsprintf(format,args);fwriteln(term,output)}export function vfprintf(term,format,args){const output=vsprintf(format,args);fwrite(term,output)}export async function fread(file,size){return await file.read(size)}export async function freadln(file){return await file.readLine()}export async function input(stdout,stdin,prompt){fprintf(stdout,prompt);return await freadln(stdin)}
