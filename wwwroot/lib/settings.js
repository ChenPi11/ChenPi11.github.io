import{listTermThemes,getTermTheme,getPreferredTermTheme,getPreferredTermThemeName,setPreferredTermTheme,registerTerminal}from"/lib/term-themes.js";import{getTheme,addThemeChangeCallback}from"/lib/theme-loader.js";import{listCookies,setCookie,getCookie,updateCookieDays,eraseCookie}from"/lib/cookie.js";for(const[name,_]of listTermThemes()){const option=$(`<label>\n                        <input type="radio" name="theme" value="${name}">\n                        ${name}\n                        </label>`);$("#theme-option").append(option)}function updateTermThemeSetting(){$(`input[value="${getPreferredTermThemeName()}"]`).prop("checked",true);if(getTheme()=="dark"){$("#theme-preview-tag").html("暗色主题下终端的主题")}else{$("#theme-preview-tag").html("亮色主题下终端的主题")}}let onThemeChanged=function(){};$(`input[name="theme"]`).on("change",(function(){setPreferredTermTheme($(this).val());const theme=$(`input[name="theme"]:checked`).val();term.options.theme=getTermTheme(theme);onThemeChanged()}));const term=new Terminal({fontFamily:"Meslo, monospace",theme:getPreferredTermTheme(),fontSize:14,scrollback:9999999});registerTerminal(term);term.resize(30,12);term.open($("#term-preview").get(0));term.writeln("[0m前景色[0m");term.writeln("[30m黑色[0m\t[1;30m亮黑色[0m\t[40m黑色背景[0m");term.writeln("[31m红色[0m\t[1;31m亮红色[0m\t[41m红色背景[0m");term.writeln("[32m绿色[0m\t[1;32m亮绿色[0m\t[42m绿色背景[0m");term.writeln("[33m黄色[0m\t[1;33m亮黄色[0m\t[43m黄色背景[0m");term.writeln("[34m蓝色[0m\t[1;34m亮蓝色[0m\t[44m蓝色背景[0m");term.writeln("[35m紫色[0m\t[1;35m亮紫色[0m\t[45m紫色背景[0m");term.writeln("[36m青色[0m\t[1;36m亮青色[0m\t[46m青色背景[0m");term.writeln("[37m白色[0m\t[1;37m亮白色[0m\t[47m白色背景[0m");term.writeln("     ");$(".keep-theme-settings").on("click",(function(){const toggleButton=$("#keep-theme-button");toggleButton.toggleClass("active");let keepThemeSettings=toggleButton.hasClass("active");if(keepThemeSettings){setCookie("keep-theme-settings","true",365)}else{setCookie("keep-theme-settings","false");eraseCookie("keep-theme-settings")}const needKeeps=["color-scheme","term-theme","term-theme-dark"];for(const needKeep of needKeeps){updateCookieDays(needKeep,keepThemeSettings?365:7)}}));$((function(){const keepThemeSettings=getCookie("keep-theme-settings")=="true";if(keepThemeSettings){$(".keep-theme-settings").addClass("active")}}));function updateCookieList(){const cookieList=$("#cookie-list");cookieList.empty();cookieList.append("<h2>Cookies</h2>");for(const[key,value]of listCookies()){const listItem=$(`<div class="list-item">\n                                <div class="item-content">\n                                    <span class="item-name">${key}</span>\n                                    <span class="item-value">${value}</span>\n                                </div>\n                            </div>`);cookieList.append(listItem)}}$(updateTermThemeSetting);$(updateCookieList);onThemeChanged=updateCookieList;addThemeChangeCallback(updateCookieList);addThemeChangeCallback(updateTermThemeSetting);
