"use strict";export class TabDivPage extends HTMLElement{static observedAttributes=["name"];constructor(){super()}connectedCallback(){const $this=$(this);this.name=$this.attr("name");if(!this.name){throw new Error("Tab div page's name is not defined.")}this.setVisible(false);$this.addClass("tab-div-page")}setVisible(visible){if(visible){$(this).animate({opacity:1,duration:200});$(this).css("display","block")}else{$(this).animate({opacity:0,duration:200});$(this).css("display","none")}}}export class TabDiv extends HTMLElement{static observedAttributes=["tab_prefix","default"];constructor(){super()}connectedCallback(){const $this=$(this);this.tab_prefix=$this.attr("prefix");this.default=$this.attr("default");if(!this.tab_prefix){throw new Error("Tab div's prefix is not defined.")}if(!this.default){throw new Error("Tab div's default is not defined.")}this.default=this.tab_prefix+this.default;$this.addClass("tab-div");this.header=$(`<div class="nav-tabs"></div>`);$this.prepend(this.header);this.container=$(`<div class="tab-div-container"></div>`);$this.append(this.container);this.tabs=[];const children=$this.children("tab-div-page");for(let i=0;i<children.length;i++){this.addTabPage($(children[i]))}const header_buttons=this.header.children();for(let i=0;i<header_buttons.length;i++){if($(header_buttons[i]).text()==this.default){$(header_buttons[i]).addClass("active")}}this.selectTabPage(this.default)}addTabPage(tabPageElement){this.container.append(tabPageElement);this.tabs.push(tabPageElement);const tabButton=$(`<button class="nav-tab" type="button">${tabPageElement.get(0).name}</button>`);tabButton.on("click",function(){this.selectTabPage(tabPageElement.get(0).name);const children=this.header.children();for(let i=0;i<children.length;i++){$(children[i]).removeClass("active")}tabButton.addClass("active")}.bind(this));this.header.append(tabButton)}selectTabPage(name){let visibleIsSet=false;for(let i=0;i<this.tabs.length;i++){const tab=this.tabs[i].get(0);if(tab.name===name){tab.setVisible(true);visibleIsSet=true}else{tab.setVisible(false)}}if(!visibleIsSet){throw new Error(`Cannot find tab page "${name}".`)}}}customElements.define("tab-div-page",TabDivPage);customElements.define("tab-div",TabDiv);
